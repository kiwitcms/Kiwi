# Generated by Django 2.1.2 on 2018-10-17 11:00

from django.conf import settings
from django.db import migrations, models


test_case_statuss = ['PROPOSED', 'CONFIRMED', 'DISABLED', 'NEED_UPDATE']


def forwards_add_initial_data(apps, schema_editor):
    TestCaseBugSystem = apps.get_model('testcases', 'TestCaseBugSystem')
    TestCaseBugSystem.objects.bulk_create([
        TestCaseBugSystem(name='Bugzilla',
                          description='1-7 digit, e.g. 1001234',
                          url_reg_exp='https://bugzilla.example.com/show_bug.cgi?id=%s',
                          validate_reg_exp=r'^\d{1,7}$'),
        TestCaseBugSystem(name='JIRA',
                          description='e.g. KIWI-222',
                          url_reg_exp='https://jira.example.com/browse/%s',
                          validate_reg_exp=r'^[A-Z0-9]+-\d+$'),
    ])

    TestCaseStatus = apps.get_model('testcases', 'TestCaseStatus')
    TestCaseStatus.objects.bulk_create(
        [TestCaseStatus(name=name, description='') for name in test_case_statuss])


def reverse_add_initial_data(apps, schema_editor):
    TestCaseBugSystem = apps.get_model('testcases', 'TestCaseBugSystem')
    TestCaseBugSystem.objects.filter(name__in=['Bugzilla', 'JIRA']).delete()

    TestCaseStatus = apps.get_model('testcases', 'TestCaseStatus')
    TestCaseStatus.objects.filter(name__in=test_case_statuss).delete()


class Migration(migrations.Migration):

    replaces = [
        ('testcases', '0002_auto_20160828_1427'),
        ('testcases', '0003_add_initial_data'),
        ('testcases', '0004_add_unique_to_testcasebugsystem_name'),
        ('testcases', '0005_change_meta_options_on_testcasebugsystem'),
        ('testcases', '0006_add_bugtracker_integration_fields'),
        ('testcases', '0005_allow_null_to_testcaseattachment_case_run'),
        ('testcases', '0007_merge'),
        ('testcases', '0008_testcasebug_field_options'),
        ('testcases', '0009_testcasebug_rename_report_url_to_base_url'),
        ('testcases', '0010_update_blank_and_null_constraints'),
        ('testcases', '0011_delete_attachments')
    ]

    dependencies = [
        ('testruns', '0001_initial'),
        ('sites', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('management', '0001_squashed'),
        ('testcases', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='testcasebug',
            name='case_run',
            field=models.ForeignKey(blank=True,
                                    default=None,
                                    null=True,
                                    on_delete=models.deletion.CASCADE,
                                    related_name='case_run_bug',
                                    to='testruns.TestCaseRun'),
        ),
        migrations.AddField(
            model_name='testcase',
            name='author',
            field=models.ForeignKey(on_delete=models.deletion.CASCADE,
                                    related_name='cases_as_author',
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='testcase',
            name='case_status',
            field=models.ForeignKey(on_delete=models.deletion.CASCADE,
                                    to='testcases.TestCaseStatus'),
        ),
        migrations.AddField(
            model_name='testcase',
            name='category',
            field=models.ForeignKey(on_delete=models.deletion.CASCADE,
                                    related_name='category_case',
                                    to='testcases.TestCaseCategory'),
        ),
        migrations.AddField(
            model_name='testcase',
            name='component',
            field=models.ManyToManyField(related_name='cases',
                                         through='testcases.TestCaseComponent',
                                         to='management.Component'),
        ),
        migrations.AddField(
            model_name='testcase',
            name='default_tester',
            field=models.ForeignKey(blank=True,
                                    null=True,
                                    on_delete=models.deletion.CASCADE,
                                    related_name='cases_as_default_tester',
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='testcase',
            name='plan',
            field=models.ManyToManyField(
                related_name='case', through='testcases.TestCasePlan', to='testplans.TestPlan'),
        ),
        migrations.AddField(
            model_name='testcase',
            name='priority',
            field=models.ForeignKey(on_delete=models.deletion.CASCADE,
                                    related_name='priority_case', to='management.Priority'),
        ),
        migrations.AddField(
            model_name='testcase',
            name='reviewer',
            field=models.ForeignKey(null=True, on_delete=models.deletion.CASCADE,
                                    related_name='cases_as_reviewer', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='testcase',
            name='tag',
            field=models.ManyToManyField(
                related_name='cases', through='testcases.TestCaseTag', to='management.TestTag'),
        ),
        migrations.AddField(
            model_name='contact',
            name='content_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=models.deletion.CASCADE,
                                    related_name='content_type_set_for_contact',
                                    to='contenttypes.ContentType', verbose_name='content type'),
        ),
        migrations.AddField(
            model_name='contact',
            name='site',
            field=models.ForeignKey(on_delete=models.deletion.CASCADE, to='sites.Site'),
        ),
        migrations.AlterUniqueTogether(
            name='testcasetext',
            unique_together={('case', 'case_text_version')},
        ),
        migrations.AlterUniqueTogether(
            name='testcaseplan',
            unique_together={('plan', 'case')},
        ),
        migrations.AlterUniqueTogether(
            name='testcasecategory',
            unique_together={('product', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='testcasebug',
            unique_together={('bug_id', 'case_run'), ('bug_id', 'case_run', 'case')},
        ),
        migrations.AlterIndexTogether(
            name='contact',
            index_together={('content_type', 'object_pk', 'site')},
        ),

        migrations.RunPython(forwards_add_initial_data, reverse_add_initial_data),

        migrations.AlterField(
            model_name='testcasebugsystem',
            name='name',
            field=models.CharField(max_length=255, unique=True),
        ),
        migrations.AlterModelOptions(
            name='testcasebugsystem',
            options={'verbose_name': 'Bug tracker', 'verbose_name_plural': 'Bug trackers'},
        ),
        migrations.AlterField(
            model_name='testcasebugsystem',
            name='url_reg_exp',
            field=models.CharField(
                help_text='A valid Python format string such as http://bugs.example.com/%s',
                max_length=8192, verbose_name='URL format string'),
        ),
        migrations.AlterField(
            model_name='testcasebugsystem',
            name='validate_reg_exp',
            field=models.CharField(help_text='A valid JavaScript regular expression such as ^\\d$',
                                   max_length=128, verbose_name='RegExp for ID validation'),
        ),
        migrations.AddField(
            model_name='testcasebugsystem',
            name='api_url',
            field=models.CharField(
                blank=True,
                help_text='This is the URL to which API requests will be sent. '
                          'Leave empty to disable!',
                max_length=1024, null=True, verbose_name='API URL'),
        ),
        migrations.AddField(
            model_name='testcasebugsystem',
            name='api_password',
            field=models.CharField(blank=True, max_length=256, null=True,
                                   verbose_name='API password or token'),
        ),
        migrations.AddField(
            model_name='testcasebugsystem',
            name='api_username',
            field=models.CharField(blank=True, max_length=256, null=True,
                                   verbose_name='API username'),
        ),
        migrations.AddField(
            model_name='testcasebugsystem',
            name='tracker_type',
            field=models.CharField(
                default='IssueTrackerType',
                help_text='This determines how Kiwi TCMS integrates with the IT system',
                max_length=128,
                verbose_name='Type'),
        ),
        migrations.AddField(
            model_name='testcasebugsystem',
            name='base_url',
            field=models.CharField(
                max_length=1024,
                null=True,
                blank=True,
                verbose_name='Base URL',
                help_text="""Base URL, for example <strong>https://bugzilla.example.com</strong>!
Leave empty to disable!
"""),
        ),
        migrations.AlterField(
            model_name='testcase',
            name='arguments',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='testcase',
            name='notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='testcase',
            name='requirement',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='testcase',
            name='script',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='testcase',
            name='summary',
            field=models.CharField(max_length=255),
        ),
        migrations.DeleteModel(
            name='TestCaseAttachment',
        ),
    ]
