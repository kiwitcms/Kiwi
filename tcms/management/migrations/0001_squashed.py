# Generated by Django 2.1.2 on 2018-10-17 09:17

from django.conf import settings
from django.db import migrations, models
import tcms.core.models.base


def forwards_add_initial_data(apps, schema_editor):
    Priority = apps.get_model('management', 'Priority')
    Priority.objects.bulk_create([
        Priority(value='P1', sortkey=1),
        Priority(value='P2', sortkey=2),
        Priority(value='P3', sortkey=3),
        Priority(value='P4', sortkey=4),
        Priority(value='P5', sortkey=5),
    ])


def reverse_remove_initial_data(apps, schema_editor):
    Priority = apps.get_model('management', 'Priority')
    Priority.objects.filter(value__in=['P1', 'P2', 'P3', 'P4', 'P5']).delete()


class Migration(migrations.Migration):

    replaces = [
        ('management', '0001_initial'),
        ('management', '0002_add_initial_data'),
        ('management', '0003_delete_attachments'),
        ('management', '0004_update_tcmsenvvalue_ordering'),
        ('management', '0005_remove_testenvironment_models')
    ]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Classification',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('description', models.TextField(blank=True)),
                ('sortkey', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'classifications',
            },
            bases=(models.Model, tcms.core.models.base.UrlMixin),
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.AutoField(max_length=5, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField()),
                ('initial_owner', models.ForeignKey(db_column='initialowner',
                                                    null=True,
                                                    on_delete=models.deletion.CASCADE,
                                                    related_name='initialowner',
                                                    to=settings.AUTH_USER_MODEL)),
                ('initial_qa_contact', models.ForeignKey(blank=True,
                                                         db_column='initialqacontact',
                                                         null=True,
                                                         on_delete=models.deletion.CASCADE,
                                                         related_name='initialqacontact',
                                                         to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'components',
            },
            bases=(models.Model, tcms.core.models.base.UrlMixin),
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=60, unique=True)),
                ('sortkey', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'milestones',
            },
        ),
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('id', models.AutoField(max_length=5, primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=64, unique=True)),
                ('sortkey', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(db_column='isactive', default=True)),
            ],
            options={
                'db_table': 'priority',
                'verbose_name_plural': 'priorities',
            },
            bases=(models.Model, tcms.core.models.base.UrlMixin),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(max_length=5, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('description', models.TextField(blank=True)),
                ('milestone_url', models.CharField(db_column='milestoneurl',
                                                   default='---',
                                                   max_length=128)),
                ('disallow_new', models.BooleanField(db_column='disallownew', default=False)),
                ('vote_super_user', models.IntegerField(db_column='votesperuser',
                                                        default=True,
                                                        null=True)),
                ('max_vote_super_bug', models.IntegerField(db_column='maxvotesperbug',
                                                           default=10000)),
                ('votes_to_confirm', models.BooleanField(db_column='votestoconfirm',
                                                         default=False)),
                ('default_milestone', models.CharField(
                    db_column='defaultmilestone', default='---', max_length=20)),
                ('classification', models.ForeignKey(
                    on_delete=models.deletion.CASCADE, to='management.Classification')),
            ],
            options={
                'db_table': 'products',
            },
            bases=(models.Model, tcms.core.models.base.UrlMixin),
        ),
        migrations.CreateModel(
            name='TCMSEnvGroup',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('manager', models.ForeignKey(on_delete=models.deletion.CASCADE,
                                              related_name='env_group_manager',
                                              to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True,
                                                  on_delete=models.deletion.CASCADE,
                                                  related_name='env_group_modifier',
                                                  to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tcms_env_groups',
            },
            bases=(models.Model, tcms.core.models.base.UrlMixin),
        ),
        migrations.CreateModel(
            name='TCMSEnvGroupPropertyMap',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(
                    on_delete=models.deletion.CASCADE, to='management.TCMSEnvGroup')),
            ],
            options={
                'db_table': 'tcms_env_group_property_map',
            },
        ),
        migrations.CreateModel(
            name='TCMSEnvProperty',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'tcms_env_properties',
            },
            bases=(models.Model, tcms.core.models.base.UrlMixin),
        ),
        migrations.CreateModel(
            name='TCMSEnvValue',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('property', models.ForeignKey(on_delete=models.deletion.CASCADE,
                                               related_name='value',
                                               to='management.TCMSEnvProperty')),
            ],
            options={
                'db_table': 'tcms_env_values',
            },
            bases=(models.Model, tcms.core.models.base.UrlMixin),
        ),
        migrations.CreateModel(
            name='TestBuild',
            fields=[
                ('build_id', models.AutoField(max_length=10, primary_key=True,
                                              serialize=False, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('milestone', models.CharField(default='---', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(db_column='isactive', default=True)),
                ('product', models.ForeignKey(on_delete=models.deletion.CASCADE,
                                              related_name='build', to='management.Product')),
            ],
            options={
                'db_table': 'test_builds',
                'verbose_name': 'build',
                'verbose_name_plural': 'builds',
            },
            bases=(models.Model, tcms.core.models.base.UrlMixin),
        ),

        migrations.CreateModel(
            name='TestTag',
            fields=[
                ('id', models.AutoField(db_column='tag_id', max_length=10,
                                        primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='tag_name', max_length=255)),
            ],
            options={
                'verbose_name': 'tag',
                'verbose_name_plural': 'tags',
            },
            bases=(models.Model, tcms.core.models.base.UrlMixin),
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=192)),
                ('product', models.ForeignKey(on_delete=models.deletion.CASCADE,
                                              related_name='version', to='management.Product')),
            ],
            options={
                'db_table': 'versions',
            },
            bases=(models.Model, tcms.core.models.base.UrlMixin),
        ),
        migrations.AddField(
            model_name='tcmsenvgrouppropertymap',
            name='property',
            field=models.ForeignKey(on_delete=models.deletion.CASCADE,
                                    to='management.TCMSEnvProperty'),
        ),
        migrations.AddField(
            model_name='tcmsenvgroup',
            name='property',
            field=models.ManyToManyField(
                related_name='group',
                through='management.TCMSEnvGroupPropertyMap',
                to='management.TCMSEnvProperty'),
        ),
        migrations.AddField(
            model_name='milestone',
            name='product',
            field=models.ForeignKey(
                on_delete=models.deletion.CASCADE, to='management.Product'),
        ),
        migrations.AddField(
            model_name='component',
            name='product',
            field=models.ForeignKey(on_delete=models.deletion.CASCADE,
                                    related_name='component', to='management.Product'),
        ),
        migrations.AlterUniqueTogether(
            name='version',
            unique_together={('product', 'value')},
        ),
        migrations.AlterUniqueTogether(
            name='testbuild',
            unique_together={('product', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='tcmsenvvalue',
            unique_together={('property', 'value')},
        ),
        migrations.AlterUniqueTogether(
            name='component',
            unique_together={('product', 'name')},
        ),

        migrations.RunPython(forwards_add_initial_data, reverse_remove_initial_data),

        migrations.AlterModelOptions(
            name='tcmsenvvalue',
            options={'ordering': ['property__name', 'value']},
        ),
    ]
